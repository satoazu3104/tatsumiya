{"version":3,"file":"assets/js/blocks/listproblem.js","mappings":"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","sources":["webpack://portart/external window [\"wp\",\"blocks\"]","webpack://portart/external window [\"wp\",\"blockEditor\"]","webpack://portart/external window [\"wp\",\"components\"]","webpack://portart/external window [\"wp\",\"element\"]","webpack://portart/./src/js/blocks/listproblem.js"],"sourcesContent":["var __WEBPACK_NAMESPACE_OBJECT__ = window[\"wp\"][\"blocks\"];","var __WEBPACK_NAMESPACE_OBJECT__ = window[\"wp\"][\"blockEditor\"];","var __WEBPACK_NAMESPACE_OBJECT__ = window[\"wp\"][\"components\"];","var __WEBPACK_NAMESPACE_OBJECT__ = window[\"wp\"][\"element\"];","import { registerBlockType } from '@wordpress/blocks';\nimport { InnerBlocks, RichText, MediaUpload, MediaUploadCheck, InspectorControls, PanelColorSettings } from '@wordpress/block-editor';\nimport { useState } from '@wordpress/element';\nimport { Button, TextControl } from '@wordpress/components';\n\nregisterBlockType('portart/listproblem', {\n  title: 'お悩みリスト',\n  icon: 'smiley',\n  category: 'layout',\n  attributes: {\n    blocksData: {\n      type: 'array',\n      default: [],\n    },\n    count: {\n      type: 'number',\n      default: 1,\n    },\n    addId: {\n      type: 'string',\n      default: '',\n    }\n  },\n  \n  edit: ({ attributes: {blocksData, count, addId}, setAttributes }) => {\n    const onChangeId = (newId) => {\n      setAttributes({\n        addId: newId\n      });\n    }\n    // アイテムの追加\n    const addBlock = () => {\n      const newBlock = { id: blocksData.length + 1, content: `` };\n      setAttributes({\n        blocksData: [...blocksData, newBlock],\n        count: count++\n      });\n    };\n\n    // アイテムの削除\n    const removeBlock = (id) => {\n      const updatedBlocksData = blocksData.filter((block) => block.id !== id);\n      setAttributes({\n        blocksData: updatedBlocksData, \n        count: count++\n       });\n    };\n    \n    // テキストの編集\n    const changeArrayText = (newText, index, label) => {\n      let newArray = blocksData;\n      newArray[index][label] = newText;\n      setAttributes({\n        blocksData: newArray,\n        count: count++\n      });\n    }\n    const changeText = (newText, label) => {\n      setAttributes({\n        [label]: newText\n      });\n    }\n    \n    return(\n      <div>\n        <InspectorControls>\n          <TextControl \n            label=\"追加Id\"\n            value={addId} \n            onChange={onChangeId}\n          />\n        </InspectorControls>\n        <div style={{\n          display: 'grid',\n          gridTemplateColumns: 'repeat(2, 1fr)',\n          gap: '24px'\n        }}>\n          {blocksData.map((block, index) => (\n            <div>\n              <div key={block.id} className=\"dynamic-block\">\n                <RichText\n                  value={block.value}\n                  onChange={newText => changeArrayText(newText, index, 'value')}\n                  tagName='p'\n                  placeholder=\"テキストを入力してください\"\n                  keepPlaceholderOnFocus={true}\n                />\n                <Button isDestructive onClick={() => removeBlock(block.id)}>アイテムを削除</Button>\n              </div>\n            </div>\n          ))}\n        </div>\n        <Button isPrimary onClick={addBlock}>アイテムを追加</Button>\n      </div>\n    )\n  },\n\n  save: ({ className, attributes: { blocksData, addId } }) => {\n    return(\n      <>\n        <ul className='p-wrap__problem--list animation u-anim__fade-in'>\n          <div className='p-wrap__problem__dec--list-back animation u-anim__fuwa'></div>\n          <div className='p-wrap__problem__dec--dot'>\n            <div className='c-fv__wrap--dots__inner'>\n              <div className='c-fv__dot'></div>\n              <div className='c-fv__dot'></div>\n              <div className='c-fv__dot'></div>\n              <div className='c-fv__dot'></div>\n              <div className='c-fv__dot'></div>\n            </div>\n          </div>\n          <div className='p-wrap__problem__dec--human animation u-anim__scroll-up'></div>\n          {blocksData.map((slug, index) => (\n            <li className='p-wrap__problem--items'>\n              <RichText.Content\n                tagName='p'\n                value={slug.value}\n                className='c-text--bold c-text__title'\n              />\n            </li>\n          ))}\n        </ul>\n      </>\n    )\n  },\n});"],"names":["window","registerBlockType","title","icon","category","attributes","blocksData","type","default","count","addId","edit","setAttributes","wp","element","createElement","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","InspectorControls","TextControl","label","value","onChange","newId","style","display","gridTemplateColumns","gap","map","block","index","key","id","className","RichText","newText","changeArrayText","newArray","tagName","placeholder","keepPlaceholderOnFocus","Button","isDestructive","onClick","updatedBlocksData","filter","removeBlock","isPrimary","addBlock","newBlock","length","content","save","Fragment","slug","Content"],"sourceRoot":""}