@use 'sass:math';
@use '../foundation/theme' as *;
@use '../mixin' as *;
$sp-space: 48px;

.l-row {
    width: calc(100vw - $sp-space);
    max-width: res($max-width);
    margin: 0 auto;

    @include sp() {
        max-width: $max-width-middle;
        width: calc(100vw - $sp-space);
    }

    &--hidden {
        overflow: hidden;
        max-width: 100vw;
        width: 100vw;

        &__visible {
            overflow: visible;
        }
    }

    &--max {
        width: 100vw;
        padding: 0 res(138px);
    }


    &--max-left {
        width: calc(100vw - 80px);
        margin-left: auto;

        @include sp {
            width: calc(100vw - math.div($sp-space, 2));
        }
    }

    &--inner-right {
        @include sp {
            padding-right: math.div($sp-space, 2);
        }
    }

    &--inner-left {
        @include sp {
            padding-left: math.div($sp-space, 2);
        }
    }

    &--pc {

        @include sp {
            width: 100vw;
        }
    }

    @include state(banner) {
        max-width: 882px;
    }

    &__br {
        @include sp {
            &::before {
                content: '\A';
                display: inline;
                white-space: pre-wrap;
            }
        }
    }

    @include state(right) {
        width: 100vw;
        max-width: unset;
        margin: 0 0 0 auto;
        padding-left: max(calc((100vw - res($max-width)) / 2), math.div($sp-space, 2));

        @include sp {
            padding-left: max(calc((100vw - $max-width) / 2), math.div($sp-space, 2));
        }
    }

    @include state(right-sp-all) {
        width: 100vw;
        max-width: unset;
        margin: 0 0 0 auto;
        padding-left: max(calc((100vw - $max-width) / 2), math.div($sp-space, 2));

        @include sp {
            padding-left: 0;
        }
    }

    @include state(right-sp) {
        @include sp {
            width: 100vw;
            max-width: unset;
            margin: 0 0 0 auto;
            padding-left: max(calc((100vw - $max-width) / 2), math.div($sp-space, 2));
        }
    }

    &__right {
        width: 100%;
    }

    @include state(right-sp-min) {
        max-width: 800px;

        @include sp {
            width: 100vw;
            max-width: unset;
            margin: 0 0 0 auto;
            padding-left: max(calc((100vw - $max-width) / 2), math.div($sp-space, 2));
        }
    }

    @include state(left) {
        width: 100vw;
        max-width: unset;
        margin: 0 0 0 auto;
        padding-right: max(calc((100vw - res($max-width)) / 2), math.div($sp-space, 2));

        @include sp {
            padding-right: max(calc((100vw - $max-width) / 2), math.div($sp-space, 2));
        }
    }

    @include state(left-sp) {
        @include sp {
            width: 100vw;
            max-width: unset;
            margin: 0 0 0 auto;
            padding-right: max(calc((100vw - $max-width) / 2), math.div($sp-space, 2));
        }
    }

    @include state(big) {
        max-width: $max-width-big;
        width: calc(100% - $sp-space - vw(96));

        @include sp {
            width: calc(100% - $sp-space);
        }
    }

    @include state(max) {
        max-width: $max-width-max;
        width: calc(100% - $sp-space);

        @include sp {
            width: calc(100% - $sp-space);
        }
    }

    @include state(middle) {
        max-width: res($max-width-middle);

        @include sp {
            width: calc(100vw - $sp-space);
        }
    }

    @include state(med) {
        max-width: res($max-width-med);

        @include sp {
            width: calc(100vw - $sp-space);
        }
    }

    @include state(min) {
        max-width: res($max-width-min);
    }

    &--min {
        max-width: 720px;
    }

    &--mid {
        max-width: 1184px;
        margin: 0 auto;
    }

    &--normal {
        max-width: 1100px;
        margin: 0 auto;
    }

    &--xmin {
        max-width: 740px;
        margin: 0 auto;

        @include state('type2') {
            max-width: 760px;
        }
    }

    &--small {
        max-width: 640px;
    }

    &--scroll {
        overflow-x: scroll;
    }

    &__double {
        display: grid;
        grid-template-columns: 1fr 220px;
        gap: 100px;
        max-width: $max-width;
        margin: 0 auto;
        width: calc(100vw - 160px);

        @include sp(1120px) {
            grid-template-columns: 100%;
            width: calc(100vw - $sp-space);
            gap: 60px;
        }
    }

    &--inner {
        width: 100%;

        @include sp {

            &[data-state=middle],
            &[data-state=min] {
                width: calc(100% - $sp-space);
            }
        }
    }
}